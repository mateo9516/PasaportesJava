/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;
import Logica.ArbolBin;
import Logica.generador;
import Logica.hash;
import Logica.inmigrante;
import javax.swing.JOptionPane;
/**
 *
 * @author Mateo
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    
    generador gen = new generador();
    ArbolBin arb = new ArbolBin();
    hash h = new hash();
    inmigrante in = new inmigrante();
    boolean estado;
    
       
    public GUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generadorLista = new javax.swing.JButton();
        hash = new javax.swing.JButton();
        arbol = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        nombreLabel = new javax.swing.JLabel();
        apeLabel = new javax.swing.JLabel();
        procLabel = new javax.swing.JLabel();
        nacioLabel = new javax.swing.JLabel();
        nombreIn = new javax.swing.JTextField();
        apellidoIn = new javax.swing.JTextField();
        procIn = new javax.swing.JTextField();
        nacioIn = new javax.swing.JTextField();
        editar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        generadorLista.setText("Generar Lista");
        generadorLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generadorListaActionPerformed(evt);
            }
        });

        hash.setText("Hash");
        hash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hashActionPerformed(evt);
            }
        });

        arbol.setText("Arbol");
        arbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbolActionPerformed(evt);
            }
        });

        buscar.setText("buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        nombreLabel.setText("Nombre");

        apeLabel.setText("Apellidos");

        procLabel.setText("Procedencia");

        nacioLabel.setText("Nacionalidad");

        nombreIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreInActionPerformed(evt);
            }
        });

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        agregar.setText("Insertar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(procLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nacioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(156, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hash)
                                .addGap(49, 49, 49)
                                .addComponent(arbol))
                            .addComponent(generadorLista)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buscar)
                                .addGap(61, 61, 61)
                                .addComponent(editar)
                                .addGap(55, 55, 55)
                                .addComponent(agregar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(borrar)
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreIn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nacioIn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(procIn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apellidoIn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generadorLista)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hash)
                    .addComponent(arbol))
                .addGap(18, 18, 18)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar)
                    .addComponent(editar)
                    .addComponent(agregar)
                    .addComponent(borrar))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLabel)
                    .addComponent(apeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(procLabel)
                    .addComponent(nacioLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nacioIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(procIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generadorListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generadorListaActionPerformed
        
        gen.generaIds();
        gen.leer("Nombres");
        gen.leer("Apellidos");
        gen.leer("Paises");
        
        gen.generar();
        
    }//GEN-LAST:event_generadorListaActionPerformed

    private void hashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hashActionPerformed
        estado = false;
        JOptionPane.showMessageDialog(rootPane, "Ahora trabajara con tablas hash");
        h.llenar();
        
        
    }//GEN-LAST:event_hashActionPerformed

    private void arbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbolActionPerformed
        
        estado = true;
        arb.llenar();
        arb.representar(0, 4999);
        JOptionPane.showMessageDialog(rootPane, "Ahora trabajara con arbol binario");
        arb.mostrar();
        buscar.setVisible(true);
        editar.setVisible(true);
        agregar.setVisible(true);
        borrar.setVisible(true);
    }//GEN-LAST:event_arbolActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        if(estado == true){
            if(arb.buscarInmi(id.getText())!= null)
            {
                in = arb.buscarInmi(id.getText());
                nombreLabel.setText(in.getNombre());
                apeLabel.setText(in.getApellidos());
                procLabel.setText(in.getProcedencia());
                nacioLabel.setText(in.getNacionalidad());

            }
            else
                JOptionPane.showMessageDialog(rootPane, "No existe el registro");
        }else
        {
            try{
            in = h.buscar(id.getText());
            nombreLabel.setText(in.getNombre());
            apeLabel.setText(in.getApellidos());
            procLabel.setText(in.getProcedencia());
            nacioLabel.setText(in.getNacionalidad());
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "No existe este registro");
            }
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        if(estado == true)
        {
            if(arb.buscarInmi(id.getText())!= null)
            {
                in = arb.buscarInmi(id.getText());
                nombreLabel.setText(in.getNombre());
                apeLabel.setText(in.getApellidos());
                procLabel.setText(in.getProcedencia());
                nacioLabel.setText(in.getNacionalidad());

                String name = nombreLabel.getText();
                String ape = apeLabel.getText();
                String procede = procLabel.getText();
                String nacio = nacioLabel.getText();

                if(!"".equals(nombreIn.getText()))
                {
                    name = nombreIn.getText();
                } else {
                }
                if(!"".equals(apellidoIn.getText()))
                {
                    ape = apellidoIn.getText();
                }
                if(!"".equals(procIn.getText()))
                {
                    procede = procIn.getText();
                }
                if(!"".equals(nacioIn.getText()))
                {
                    nacio = nacioIn.getText();
                }

                    arb.editarInmi(id.getText(), name, ape, procede, nacio);

            }
            else
                JOptionPane.showMessageDialog(rootPane, "El Registro es inexistente");
        }else
        {
                in = h.buscar(id.getText());
                nombreLabel.setText(in.getNombre());
                apeLabel.setText(in.getApellidos());
                procLabel.setText(in.getProcedencia());
                nacioLabel.setText(in.getNacionalidad());

                String name = nombreLabel.getText();
                String ape = apeLabel.getText();
                String procede = procLabel.getText();
                String nacio = nacioLabel.getText();

                if(!"".equals(nombreIn.getText()))
                {
                    name = nombreIn.getText();
                } else {
                }
                if(!"".equals(apellidoIn.getText()))
                {
                    ape = apellidoIn.getText();
                }
                if(!"".equals(procIn.getText()))
                {
                    procede = procIn.getText();
                }
                if(!"".equals(nacioIn.getText()))
                {
                    nacio = nacioIn.getText();
                }

                    h.editar(id.getText(), name, ape, nacio, procede);    
        }
        
            JOptionPane.showMessageDialog(rootPane, "Registro modificado con exito");
    }//GEN-LAST:event_editarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
       
        if(estado == true)
        {
            String iden = id.getText();
            String name = nombreIn.getText();
            String ape = apellidoIn.getText();
            String procede = procIn.getText();
            String nacio = nacioIn.getText();

            if(arb.buscarInmi(iden)!=null)
            {
                JOptionPane.showMessageDialog(rootPane, "El identificador ya existe");
            }else
                arb.agregarInmi(iden, name, ape, procede, nacio);
        }else
        { 
            String iden = id.getText();
            String name = nombreIn.getText();
            String ape = apellidoIn.getText();
            String procede = procIn.getText();
            String nacio = nacioIn.getText();
            
            try{
            h.agregar(iden, name, ape, nacio, procede);
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,e.getMessage());
            }
            
        }
            
            JOptionPane.showMessageDialog(rootPane, "Registro agregado con exito");
            
    }//GEN-LAST:event_agregarActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        String iden = id.getText();
        if(estado == true)
        {    
            if(arb.buscarInmi(iden)!=null)
            {
                arb.eliminarInmi(iden);
            }else
                JOptionPane.showMessageDialog(rootPane, "El identificador no existe");
        }else
        {
            try
            {
             h.eliminar(iden);   
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "No existe");
            }
        }
        
        JOptionPane.showMessageDialog(rootPane, "Registro eliminado con exito");
                nombreLabel.setText("nombre");
                apeLabel.setText("Apellidos");
                procLabel.setText("Procedencia");
                nacioLabel.setText("Nacionalidad");
    }//GEN-LAST:event_borrarActionPerformed

    private void nombreInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreInActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JLabel apeLabel;
    private javax.swing.JTextField apellidoIn;
    private javax.swing.JButton arbol;
    private javax.swing.JButton borrar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton editar;
    private javax.swing.JButton generadorLista;
    private javax.swing.JButton hash;
    private javax.swing.JTextField id;
    private javax.swing.JTextField nacioIn;
    private javax.swing.JLabel nacioLabel;
    private javax.swing.JTextField nombreIn;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField procIn;
    private javax.swing.JLabel procLabel;
    // End of variables declaration//GEN-END:variables
}
